{"version":3,"sources":["js/UI.js","js/app.js"],"names":["ui","UI","colorList","out","outl","forEach","color","index","outEl","innerHTML","outList","document","querySelector","text_clr_1","clr_1","text_clr_2","clr_2","num","initialColors","addColors","addEventListener","e","value","target","style","background","blend","parseInt","cookStr","str","length","r1","r","g","b","slice","g1","b1","r2","g2","b2","dr","Math","abs","dg","db","output","i","ceil","res","toString","push"],"mappings":";AAuBeA,aAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,KAAAA,EAAAA,OAAAA,eAAAA,EAAAA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAvBTC,IAAAA,EACF,SAAa,IAAA,IAAA,EAAA,KAAA,EAAA,KAAA,GAKD,EAAA,KAAA,YAAA,SAAAC,GACJC,IAAAA,EAAM,GAAIC,EAAO,GACrBF,EAAUG,QAAQ,SAACC,EAAOC,GACtBJ,GAE4CG,mGAAAA,OAAAA,EACpBC,iDAAAA,OAAAA,EAAM,EAH9B,0CAMAH,GAAoCG,4BAAAA,OAAAA,EAAM,EAAMD,MAAAA,OAAAA,EAAhD,UAEJ,EAAKE,MAAMC,UAAYN,EACvB,EAAKO,QAAQD,UAAYL,IAhBpBI,KAAAA,MAAQG,SAASC,cAAc,SAC/BF,KAAAA,QAAUC,SAASC,cAAc,eAmBxCZ,EAAK,IAAIC,EACAD,EAAAA,EAAAA,QAAAA,QAAAA;;ACuCf,aAzDA,IAAA,EAAA,EAAA,QAAA,SAyDA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtDA,IAAMa,EAAaF,SAASC,cAAc,WACpCE,EAAQH,SAASC,cAAc,UAC/BG,EAAaJ,SAASC,cAAc,WACpCI,EAAQL,SAASC,cAAc,UAC/BK,EAAMN,SAASC,cAAc,QAK7BM,EAAgB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACvMlB,EAAGmB,QAAAA,UAAUD,GAIbJ,EAAMM,iBAAiB,SAAU,SAAAC,GAC7BR,EAAWS,MAAQD,EAAEE,OAAOD,MAC5BX,SAASC,cAAc,UAAUY,MAAMC,WAAaJ,EAAEE,OAAOD,MAC1DH,EAAAA,QAAAA,UAAUO,EAAMC,SAASV,EAAIK,WAEpCN,EAAMI,iBAAiB,SAAU,SAAAC,GAC7BN,EAAWO,MAAQD,EAAEE,OAAOD,MAC5BX,SAASC,cAAc,UAAUY,MAAMC,WAAaJ,EAAEE,OAAOD,MAC1DH,EAAAA,QAAAA,UAAUO,EAAMC,SAASV,EAAIK,WAEpCT,EAAWO,iBAAiB,QAAS,SAAAC,GACjCP,EAAMQ,MAAQD,EAAEE,OAAOD,MACvBX,SAASC,cAAc,UAAUY,MAAMC,WAAaJ,EAAEE,OAAOD,MAC1DH,EAAAA,QAAAA,UAAUO,EAAMC,SAASV,EAAIK,WAEpCP,EAAWK,iBAAiB,QAAS,SAAAC,GACjCL,EAAMM,MAAQD,EAAEE,OAAOD,MACvBX,SAASC,cAAc,UAAUY,MAAMC,WAAaJ,EAAEE,OAAOD,MAC1DH,EAAAA,QAAAA,UAAUO,EAAMC,SAASV,EAAIK,WAMpCL,EAAIG,iBAAiB,QAAS,SAAAC,GACvBF,EAAAA,QAAAA,UAAUO,EAAMC,SAASN,EAAEE,OAAOD,WAEzCL,EAAIG,iBAAiB,SAAU,SAAAC,GACxBF,EAAAA,QAAAA,UAAUO,EAAMC,SAASN,EAAEE,OAAOD,WAMzC,IAAMM,EAAU,SAAAC,GACTA,OAAc,GAAdA,EAAIC,OAAwBD,IAAAA,OAAAA,GACxBA,GAILH,EAAQ,SAAAT,GAoBN,IAlBAc,IAeAC,EAAEC,EAAEC,EAfJH,EAAKJ,SAASb,EAAMQ,MAAMa,MAAM,EAAE,GAAI,IACtCC,EAAKT,SAASb,EAAMQ,MAAMa,MAAM,EAAE,GAAI,IACtCE,EAAKV,SAASb,EAAMQ,MAAMa,MAAM,EAAE,GAAI,IAEpCG,EAAKX,SAASX,EAAMM,MAAMa,MAAM,EAAE,GAAI,IACtCI,EAAKZ,SAASX,EAAMM,MAAMa,MAAM,EAAE,GAAI,IACtCK,EAAKb,SAASX,EAAMM,MAAMa,MAAM,EAAE,GAAI,IAGtCM,EAAKC,KAAKC,KAAKL,EAAGP,IAAKd,EAAI,IAC3B2B,EAAKF,KAAKC,KAAKJ,EAAGH,IAAKnB,EAAI,IAC3B4B,EAAKH,KAAKC,KAAKH,EAAGH,IAAKpB,EAAI,IAG3B6B,EAAS,CAAKhC,IAAAA,OAAAA,EAAMQ,MAAMa,MAAM,EAAE,IAAKrB,OAAAA,EAAMQ,MAAMa,MAAM,EAAE,IAAKrB,OAAAA,EAAMQ,MAAMa,MAAM,EAAE,KAIlFY,EAAI,EAAGA,GAAK9B,EAAI,EAAG8B,IAAI,CACxBhB,EAAGO,GACFP,GAAMU,GAAIT,EAAIU,KAAKM,KAAKjB,IACjB,MAAKC,EAAI,OAGhBD,GAAMU,GAAIT,EAAIU,KAAKM,KAAKjB,IACjB,MAAKC,EAAI,MAGjBI,EAAGG,GACFH,GAAMQ,GAAIX,EAAIS,KAAKM,KAAKZ,IACjB,MAAKH,EAAI,OAGhBG,GAAMQ,GAAIX,EAAIS,KAAKM,KAAKZ,IACjB,MAAKH,EAAI,MAGjBI,EAAGG,GACFH,GAAMQ,GAAIX,EAAIQ,KAAKM,KAAKX,IACjB,MAAKH,EAAI,OAGhBG,GAAMQ,GAAIX,EAAIQ,KAAKM,KAAKX,IACjB,MAAKH,EAAI,MAGde,IAAAA,EAAUrB,IAAAA,OAAAA,EAAQI,EAAEkB,SAAS,MAAOtB,OAAAA,EAAQK,EAAEiB,SAAS,MAAOtB,OAAAA,EAAQM,EAAEgB,SAAS,MACvFJ,EAAOK,KAAKF,GAGTH,OAAAA","file":"app.3ba26617.js","sourceRoot":"..","sourcesContent":["class UI{\r\n    constructor(){\r\n        this.outEl = document.querySelector('.card');\r\n        this.outList = document.querySelector('.colorList');\r\n    }\r\n\r\n    addColors = colorList => {\r\n        let out = '', outl = '';\r\n        colorList.forEach((color, index) => {\r\n            out += `\r\n            <div class=\"colorWrapper\">\r\n                <div class=\"color\" style=\"background: ${color};\"></div>\r\n                <p class=\"number\">${index+1}</p>\r\n            </div>\r\n            `;\r\n            outl += `<p class=\"colorListText\">${index+1}) ${color}</p>`;\r\n        });\r\n        this.outEl.innerHTML = out;\r\n        this.outList.innerHTML = outl;\r\n    }\r\n}\r\n\r\nconst ui = new UI();\r\nexport default ui;","/*\r\n * WARNING: Highly sacreligious and unmaintainable pile of junc ahead.\r\n *          If you've been having a good day so far, don't read.\r\n*/\r\n\r\nimport ui from './UI';\r\n\r\n//input fields----------------------------------------\r\nconst text_clr_1 = document.querySelector('#color1');\r\nconst clr_1 = document.querySelector('#clr-1');\r\nconst text_clr_2 = document.querySelector('#color2');\r\nconst clr_2 = document.querySelector('#clr-2');\r\nconst num = document.querySelector('#num');\r\n//----------------------------------------------------\r\n\r\n\r\n//initial colors\r\nconst initialColors = [\"#4400ff\", \"#400fff\", \"#3c1dff\", \"#382bff\", \"#3339ff\", \"#2f47ff\", \"#2b55ff\", \"#2763ff\", \"#2271ff\", \"#1e7fff\", \"#1a8dff\", \"#169bff\", \"#11a9ff\", \"#0db7ff\", \"#09c5ff\", \"#05d3ff\", \"#00e1ff\"];\r\nui.addColors(initialColors);\r\n\r\n\r\n//bind textfields and color inputs-----------------------------------\r\nclr_1.addEventListener('change', e=>{\r\n    text_clr_1.value = e.target.value;\r\n    document.querySelector(\"#clrw1\").style.background = e.target.value;\r\n    ui.addColors(blend(parseInt(num.value)));\r\n})\r\nclr_2.addEventListener('change', e=>{\r\n    text_clr_2.value = e.target.value;\r\n    document.querySelector(\"#clrw2\").style.background = e.target.value;\r\n    ui.addColors(blend(parseInt(num.value)));\r\n})\r\ntext_clr_1.addEventListener('keyup', e=>{\r\n    clr_1.value = e.target.value;\r\n    document.querySelector(\"#clrw1\").style.background = e.target.value;\r\n    ui.addColors(blend(parseInt(num.value)));\r\n})\r\ntext_clr_2.addEventListener('keyup', e=>{\r\n    clr_2.value = e.target.value;\r\n    document.querySelector(\"#clrw2\").style.background = e.target.value;\r\n    ui.addColors(blend(parseInt(num.value)));\r\n})\r\n//-------------------------------------------------------------------\r\n\r\n\r\n//change number of intermediate colors on input---------------\r\nnum.addEventListener('keyup', e => {\r\n    ui.addColors(blend(parseInt(e.target.value)));\r\n})\r\nnum.addEventListener('change', e => {\r\n    ui.addColors(blend(parseInt(e.target.value)));\r\n})\r\n//-------------------------------------------------------------\r\n\r\n\r\n//function that inserts 0 before single hex digit\r\nconst cookStr = str => {\r\n    if(str.length == 1) return `0${str}`\r\n    return str\r\n}\r\n\r\n//main blend function\r\nconst blend = num => {\r\n    //get integer r g b values from color inputs\r\n    let r1 = parseInt(clr_1.value.slice(1,3), 16);\r\n    let g1 = parseInt(clr_1.value.slice(3,5), 16);\r\n    let b1 = parseInt(clr_1.value.slice(5,7), 16);\r\n\r\n    const r2 = parseInt(clr_2.value.slice(1,3), 16);\r\n    const g2 = parseInt(clr_2.value.slice(3,5), 16);\r\n    const b2 = parseInt(clr_2.value.slice(5,7), 16);\r\n\r\n    //value to be divided with\r\n    const dr = Math.abs((r2-r1)/(num+1));\r\n    const dg = Math.abs((g2-g1)/(num+1));\r\n    const db = Math.abs((b2-b1)/(num+1));\r\n\r\n    //add first color to output array\r\n    const output = [`#${clr_1.value.slice(1,3)}${clr_1.value.slice(3,5)}${clr_1.value.slice(5,7)}`];\r\n    let r,g,b;\r\n\r\n    //push intermediate and last color values into output array\r\n    for(let i = 1; i <= num+1; i++){\r\n        if(r1<r2){\r\n            r1 += dr; r = Math.ceil(r1);\r\n            if(r > 255) r = 255\r\n        }\r\n        else {\r\n            r1 -= dr; r = Math.ceil(r1); \r\n            if(r > 255) r = 255\r\n        }\r\n\r\n        if(g1<g2){\r\n            g1 += dg; g = Math.ceil(g1);\r\n            if(g > 255) g = 255\r\n        }\r\n        else {\r\n            g1 -= dg; g = Math.ceil(g1);\r\n            if(g > 255) g = 255\r\n        }\r\n\r\n        if(b1<b2){\r\n            b1 += db; b = Math.ceil(b1);\r\n            if(b > 255) b = 255\r\n        }\r\n        else {\r\n            b1 -= db; b = Math.ceil(b1);\r\n            if(b > 255) b = 255\r\n        }\r\n\r\n        const res = `#${cookStr(r.toString(16))}${cookStr(g.toString(16))}${cookStr(b.toString(16))}`;\r\n        output.push(res);\r\n    }\r\n\r\n    return output;\r\n}"]}